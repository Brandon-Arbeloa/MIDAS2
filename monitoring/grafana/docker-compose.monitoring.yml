version: '3.9'

services:
  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: midas-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules:/etc/prometheus/rules:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    environment:
      - TZ=UTC
    networks:
      - midas-monitoring
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: midas-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=${DOMAIN_NAME:-localhost}
      - GF_SERVER_ROOT_URL=http://${DOMAIN_NAME:-localhost}:3000/
      - GF_DATABASE_TYPE=postgres
      - GF_DATABASE_HOST=postgres:5432
      - GF_DATABASE_NAME=${POSTGRES_DB:-midas}_grafana
      - GF_DATABASE_USER=${POSTGRES_USER:-midas_user}
      - GF_DATABASE_PASSWORD_FILE=/run/secrets/postgres_password
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel
      - GF_FEATURE_TOGGLES_ENABLE=newNavigation
      - GF_LOG_LEVEL=info
    secrets:
      - postgres_password
    depends_on:
      - prometheus
    networks:
      - midas-monitoring
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node Exporter for Windows system metrics (runs on host)
  node-exporter:
    image: prom/node-exporter:latest
    container_name: midas-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.systemd'
      - '--collector.processes'
    environment:
      - TZ=UTC
    networks:
      - midas-monitoring
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9100/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Windows Exporter (for detailed Windows metrics)
  windows-exporter:
    image: ghcr.io/prometheus-community/windows-exporter:latest
    container_name: midas-windows-exporter
    restart: unless-stopped
    ports:
      - "9182:9182"
    environment:
      - ENABLED_COLLECTORS=cpu,memory,logical_disk,physical_disk,net,system,service,process,cs
      - TZ=UTC
    networks:
      - midas-monitoring
    healthcheck:
      test: ["CMD", "powershell", "-Command", "try { Invoke-WebRequest -Uri http://localhost:9182/metrics -UseBasicParsing } catch { exit 1 }"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Exporter for Redis metrics
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: midas-redis-exporter
    restart: unless-stopped
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
      - REDIS_EXPORTER_LOG_FORMAT=json
    depends_on:
      - redis
    networks:
      - midas-monitoring
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9121/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Exporter
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: midas-postgres-exporter
    restart: unless-stopped
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER:-midas_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-midas}?sslmode=disable
      - PG_EXPORTER_EXTEND_QUERY_PATH=/etc/postgres_exporter/queries.yaml
    volumes:
      - ./postgres-exporter/queries.yaml:/etc/postgres_exporter/queries.yaml:ro
    depends_on:
      - postgres
    networks:
      - midas-monitoring
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9187/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Alertmanager for alerts
  alertmanager:
    image: prom/alertmanager:latest
    container_name: midas-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://${DOMAIN_NAME:-localhost}:9093/'
      - '--web.route-prefix=/'
    environment:
      - TZ=UTC
    networks:
      - midas-monitoring
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Loki for log aggregation
  loki:
    image: grafana/loki:latest
    container_name: midas-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    environment:
      - TZ=UTC
    networks:
      - midas-monitoring
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Promtail for log shipping
  promtail:
    image: grafana/promtail:latest
    container_name: midas-promtail
    restart: unless-stopped
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./logs:/app/logs:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    environment:
      - TZ=UTC
    networks:
      - midas-monitoring

# Connect to main MIDAS network
networks:
  midas-monitoring:
    driver: bridge
    external: false
  midas-network:
    external: true

# Volumes for persistent data
volumes:
  prometheus-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/prometheus-data

  grafana-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/grafana-data

  alertmanager-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/alertmanager-data

  loki-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/loki-data

# Secrets
secrets:
  postgres_password:
    external: true